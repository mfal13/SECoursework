{"version":3,"sources":["index.js"],"names":["express","require","mysql","app","port","set","use","console","log","process","env","MODE_ENV","db","createConnection","host","DATABASE_HOST","user","password","database","get","req","res","render","send","execute","err","rows","fields","length","params","id","listen"],"mappings":";;AAAA;AACA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,QAAD,CAArB;AAEA;;;AACA,IAAME,GAAG,GAAGH,OAAO,EAAnB;AACA,IAAMI,IAAI,GAAG,IAAb,C,CAEA;;AACAD,GAAG,CAACE,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAF,GAAG,CAACE,GAAJ,CAAQ,OAAR,EAAiB,SAAjB,E,CAEA;;AACAF,GAAG,CAACG,GAAJ,CAAQN,OAAO,UAAP,CAAe,QAAf,CAAR;AAEAO,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAAR,CAAYC,QAAxB;AAEA;;AACA,IAAMC,EAAE,GAAGV,KAAK,CAACW,gBAAN,CAAuB;AAC9BC,EAAAA,IAAI,EAAEL,OAAO,CAACC,GAAR,CAAYK,aAAZ,IAA6B,WADL;AAE9BC,EAAAA,IAAI,EAAE,MAFwB;AAG9BC,EAAAA,QAAQ,EAAE,UAHoB;AAI9BC,EAAAA,QAAQ,EAAE;AAJoB,CAAvB,CAAX;AAOA;;AACAf,GAAG,CAACgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACvBA,EAAAA,GAAG,CAACC,MAAJ,CAAW,OAAX,EACI;AAAE,aAAS,eAAX;AAA4B,eAAW;AAAvC,GADJ;AAEH,CAHD,E,CAKA;;AACAnB,GAAG,CAACgB,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC3BA,EAAAA,GAAG,CAACE,IAAJ,CAAS,MAAT;AACH,CAFD,E,CAIA;;AACApB,GAAG,CAACgB,GAAJ,CAAQ,SAAR,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BT,EAAAA,EAAE,CAACY,OAAH,CAAW,sBAAX,EAAmC,UAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAuB;AACtDpB,IAAAA,OAAO,CAACC,GAAR,oBAAwBkB,IAAI,CAACE,MAA7B;AACA,WAAOP,GAAG,CAACE,IAAJ,CAASG,IAAT,CAAP;AACH,GAHD;AAIH,CALD,E,CAOA;;AACAvB,GAAG,CAACgB,GAAJ,CAAQ,UAAR,EAAoB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9BT,EAAAA,EAAE,CAACY,OAAH,CAAW,yBAAX,EAAsC,UAACC,GAAD,EAAMC,IAAN,EAAYC,MAAZ,EAAuB;AACzDpB,IAAAA,OAAO,CAACC,GAAR,qBAAyBkB,IAAI,CAACE,MAA9B;AACA,WAAOP,GAAG,CAACE,IAAJ,CAASG,IAAT,CAAP;AACH,GAHD;AAIH,CALD,E,CAOA;;AACAvB,GAAG,CAACgB,GAAJ,CAAQ,WAAR,EAAqB,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AACrC;AACA;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ,EAAiBC,GAAjB,EAHqC,CAIrC;;AACAA,EAAAA,GAAG,CAACE,IAAJ,CAAS,WAAWH,GAAG,CAACS,MAAJ,CAAWC,EAA/B;AAEH,CAPD,E,CASA;;AACA3B,GAAG,CAAC4B,MAAJ,CAAW3B,IAAX,EAAiB,YAAM;AACnBG,EAAAA,OAAO,CAACC,GAAR,kCAAsCJ,IAAtC;AACH,CAFD","sourcesContent":["/* Import dependencies */\r\nconst express = require(\"express\");\r\nconst mysql = require(\"mysql2\");\r\n\r\n/* Create express instance */\r\nconst app = express();\r\nconst port = 3000;\r\n\r\n//Use the pug template engine\r\napp.set(\"view engine\", \"pug\");\r\napp.set(\"views\", \"./views\");\r\n\r\n//Add a static files location\r\napp.use(express.static(\"static\"));\r\n\r\nconsole.log(process.env.MODE_ENV);\r\n\r\n/* Setup database connection */\r\nconst db = mysql.createConnection({\r\n    host: process.env.DATABASE_HOST || \"localhost\",\r\n    user: \"user\",\r\n    password: \"password\",\r\n    database: \"world\",\r\n});\r\n\r\n/* Landing route */\r\napp.get(\"/\", (req, res) => {\r\n    res.render(\"index\",\r\n        { 'title': 'My index page', 'heading': 'My heading' });\r\n});\r\n\r\n// Sample API route\r\napp.get(\"/ping\", (req, res) => {\r\n    res.send(\"pong\");\r\n});\r\n\r\n// Returns an array of cities from the database\r\napp.get(\"/cities\", (req, res) => {\r\n    db.execute(\"SELECT * FROM `city`\", (err, rows, fields) => {\r\n        console.log(`/cities: ${rows.length} rows`);\r\n        return res.send(rows);\r\n    });\r\n});\r\n\r\n// Returns an array countries from the database\r\napp.get(\"/country\", (req, res) => {\r\n    db.execute(\"SELECT * FROM `country`\", (err, rows, fields) => {\r\n        console.log(`/country: ${rows.length} rows`);\r\n        return res.send(rows);\r\n    });\r\n});\r\n\r\n//Dinamic route example\r\napp.get(\"/city/:id\", function (req, res) {\r\n    //req.params contains any parametres in the request\r\n    //We can examinit in the console for debugging purpose\r\n    console.log(req, res);\r\n    //Retrive the name paramentre and use it in a dinamic generated \r\n    res.send(\"Id is \" + req.params.id);\r\n\r\n});\r\n\r\n// Run server!\r\napp.listen(port, () => {\r\n    console.log(`Server running on port ${port}`);\r\n});"],"file":"index.dev.js"}